{"ast":null,"code":"import i18n from\"i18next\";import{initReactI18next}from\"react-i18next\";import Backend from\"i18next-http-backend\";import LanguageDetector from\"i18next-browser-languagedetector\";i18n// load translation using http -> see /public/locales (i.e. https://github.com/i18next/react-i18next/tree/master/example/react/public/locales)\n// learn more: https://github.com/i18next/i18next-http-backend\n.use(Backend)// detect user language\n// learn more: https://github.com/i18next/i18next-browser-languageDetector\n.use(LanguageDetector)// pass the i18n instance to react-i18next.\n.use(initReactI18next)// init i18next\n// for all options read: https://www.i18next.com/overview/configuration-options\n.init({lng:\"en\",// lng: document.querySelector(\"html\").lang,\nbackend:{/* translation file path */loadPath:\"/assets/i18n/{{ns}}/{{lng}}.json\"},fallbackLng:\"en\",// detection: {\n//   order: [\n//     \"htmlTag\",\n//     \"cookie\",\n//     \"localStorage\",\n//     \"navigator\",\n//     \"path\",\n//     \"subdomain\",\n//   ],\n// },\ndebug:true,/* can have multiple namespace, in case you want to divide a huge translation into smaller pieces and load them on demand */ns:[\"translations\"],defaultNS:\"translations\",keySeparator:false,interpolation:{escapeValue:false,formatSeparator:\",\"},react:{useSuspense:false}});export default i18n;","map":{"version":3,"sources":["D:/ArchiLux-React/ArchiLux-React/src/i18n.js"],"names":["i18n","initReactI18next","Backend","LanguageDetector","use","init","lng","backend","loadPath","fallbackLng","debug","ns","defaultNS","keySeparator","interpolation","escapeValue","formatSeparator","react","useSuspense"],"mappings":"AAAA,MAAOA,CAAAA,IAAP,KAAiB,SAAjB,CACA,OAASC,gBAAT,KAAiC,eAAjC,CAEA,MAAOC,CAAAA,OAAP,KAAoB,sBAApB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,kCAA7B,CAEAH,IACE;AACA;AAFE,CAGDI,GAHH,CAGOF,OAHP,CAIE;AACA;AALF,CAMGE,GANH,CAMOD,gBANP,CAOE;AAPF,CAQGC,GARH,CAQOH,gBARP,CASE;AACA;AAVF,CAWGI,IAXH,CAWQ,CACJC,GAAG,CAAE,IADD,CAEJ;AACAC,OAAO,CAAE,CACP,2BACAC,QAAQ,CAAE,kCAFH,CAHL,CAOJC,WAAW,CAAE,IAPT,CAQJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,KAAK,CAAE,IAlBH,CAmBJ,4HACAC,EAAE,CAAE,CAAC,cAAD,CApBA,CAqBJC,SAAS,CAAE,cArBP,CAsBJC,YAAY,CAAE,KAtBV,CAuBJC,aAAa,CAAE,CACbC,WAAW,CAAE,KADA,CAEbC,eAAe,CAAE,GAFJ,CAvBX,CA2BJC,KAAK,CAAE,CACLC,WAAW,CAAE,KADR,CA3BH,CAXR,EA2CA,cAAelB,CAAAA,IAAf","sourcesContent":["import i18n from \"i18next\";\r\nimport { initReactI18next } from \"react-i18next\";\r\n\r\nimport Backend from \"i18next-http-backend\";\r\nimport LanguageDetector from \"i18next-browser-languagedetector\";\r\n\r\ni18n\r\n  // load translation using http -> see /public/locales (i.e. https://github.com/i18next/react-i18next/tree/master/example/react/public/locales)\r\n  // learn more: https://github.com/i18next/i18next-http-backend\r\n  .use(Backend)\r\n  // detect user language\r\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\r\n  .use(LanguageDetector)\r\n  // pass the i18n instance to react-i18next.\r\n  .use(initReactI18next)\r\n  // init i18next\r\n  // for all options read: https://www.i18next.com/overview/configuration-options\r\n  .init({\r\n    lng: \"en\",\r\n    // lng: document.querySelector(\"html\").lang,\r\n    backend: {\r\n      /* translation file path */\r\n      loadPath: \"/assets/i18n/{{ns}}/{{lng}}.json\",\r\n    },\r\n    fallbackLng: \"en\",\r\n    // detection: {\r\n    //   order: [\r\n    //     \"htmlTag\",\r\n    //     \"cookie\",\r\n    //     \"localStorage\",\r\n    //     \"navigator\",\r\n    //     \"path\",\r\n    //     \"subdomain\",\r\n    //   ],\r\n    // },\r\n    debug: true,\r\n    /* can have multiple namespace, in case you want to divide a huge translation into smaller pieces and load them on demand */\r\n    ns: [\"translations\"],\r\n    defaultNS: \"translations\",\r\n    keySeparator: false,\r\n    interpolation: {\r\n      escapeValue: false,\r\n      formatSeparator: \",\",\r\n    },\r\n    react: {\r\n      useSuspense: false,\r\n    },\r\n  });\r\n\r\nexport default i18n;\r\n"]},"metadata":{},"sourceType":"module"}